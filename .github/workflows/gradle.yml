name: Java CI with Gradle

on:
  push:
    branches: [ deploy-practice-3 ]

env:
  BUCKET_NAME: my-github-actinos-s3-bucket
  CODE_DEPLOY_APP_NAME: my-miniproject-codedeploy-app
  DEPLOYMENT_GROUP_NAME: my-miniproject-deployment-group
  RESOURCE_PATH: ./src/main/resources/application.yaml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) 워크플로우 실행 전 기본적으로 체크아웃 필요
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Update application.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          cloud.aws.credentials.accessKey: ${{ secrets.AWS_ACCESS_KEY }}
          cloud.aws.credentials.secretKey: ${{ secrets.AWS_SECRET_KEY }}
          cloud.aws.s3.bucket: ${{secrets.AWS_S3_BUCKET}}
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          spring.data.redis.host: ${{ secrets.REDIS_HOST }}
          spring.data.redis.port: ${{ secrets.REDIS_PORT }}
          spring.mail.username: ${{ secrets.MAIL_USERNAME }}
          spring.mail.password: ${{ secrets.MAIL_PASSWORD }}
          jwt.secret.key: ${{ secrets.JWT_SECRET_KEY }}

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: clean bootJar

      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy
      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy
      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy
      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy
      # deploy 폴더 파일 zip 압축
      - name: Make zip file
        run: zip -r ./bidpanda.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./bidpanda.zip s3://$BUCKET_NAME/

      - name: Deploy
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APP_NAME
          --deployment-group-name $DEPLOYMENT_GROUP_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --file-exists-behavior OVERWRITE
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=bidpanda.zip
          --region ap-northeast-2